/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hubanato.forms;

import com.sun.prism.paint.Color;
import javax.swing.JFrame;
import edu.hubanato.entities.RateVariable;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Baptiste
 */
public class FormRateVariable extends javax.swing.JFrame {

    // Variable declaration
    RateVariable rateVariable;
    String title[] = {"Year", "Index", "NewRate", "Monthly", "Remaining"};
    
    /**
     * Creates new form RateVariable
     */
    public FormRateVariable() {
        
        rateVariable = new RateVariable();
        
        initComponents();
        
        setTitle("Simulation de prêt à taux variable");
        
        // Close when clicking on the cross
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        // Adjust Size to content
        pack();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        PanelGCharacteristics = new javax.swing.JPanel();
        jLabelAmount = new javax.swing.JLabel();
        jLabelRate = new javax.swing.JLabel();
        jLabelCape = new javax.swing.JLabel();
        jLabelDuring = new javax.swing.JLabel();
        jLabelError = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        formattedTextAmount = new javax.swing.JFormattedTextField();
        formattedTextDuree = new javax.swing.JFormattedTextField();
        formattedTextCape = new javax.swing.JFormattedTextField();
        formattedTextRate = new javax.swing.JFormattedTextField();
        jButtonInitialize = new javax.swing.JButton();
        jPanelDecay = new javax.swing.JPanel();
        jScrollPaneDecay = new javax.swing.JScrollPane();
        jTableDecay = new javax.swing.JTable();
        jLabelTableDecay = new javax.swing.JLabel();
        jPanelGrowth = new javax.swing.JPanel();
        jScrollPaneGrowth = new javax.swing.JScrollPane();
        jTableGrowth = new javax.swing.JTable();
        jLabelTableGrowth = new javax.swing.JLabel();
        jPanelStable = new javax.swing.JPanel();
        jLabelTableStable = new javax.swing.JLabel();
        jScrollPaneStable = new javax.swing.JScrollPane();
        jTableStable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuSettings = new javax.swing.JMenu();
        jMenuItemSettings = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Simulation rate variable");

        jLabelAmount.setText("Montant (en €)*:");

        jLabelRate.setText("Taux *:");

        jLabelCape.setText("Capé *:");

        jLabelDuring.setText("Durée (en années)*:");

        jLabelError.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabelError.setText("* champs obligatoires.");

        btnStart.setText("Lancer la simulation");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        formattedTextAmount.setToolTipText("");
        formattedTextAmount.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        formattedTextAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formattedTextAmountKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formattedTextAmountKeyTyped(evt);
            }
        });

        formattedTextDuree.setToolTipText("");
        formattedTextDuree.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formattedTextDureeKeyTyped(evt);
            }
        });

        formattedTextCape.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formattedTextCapeKeyTyped(evt);
            }
        });

        formattedTextRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formattedTextRateActionPerformed(evt);
            }
        });

        jButtonInitialize.setText("Initialiser");
        jButtonInitialize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInitializeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelGCharacteristicsLayout = new javax.swing.GroupLayout(PanelGCharacteristics);
        PanelGCharacteristics.setLayout(PanelGCharacteristicsLayout);
        PanelGCharacteristicsLayout.setHorizontalGroup(
            PanelGCharacteristicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelGCharacteristicsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelGCharacteristicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelGCharacteristicsLayout.createSequentialGroup()
                        .addComponent(jLabelAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formattedTextAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabelDuring)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formattedTextDuree, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jLabelCape)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formattedTextCape, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jLabelRate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formattedTextRate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(PanelGCharacteristicsLayout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(btnStart)
                .addGap(18, 18, 18)
                .addComponent(jButtonInitialize, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelGCharacteristicsLayout.setVerticalGroup(
            PanelGCharacteristicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelGCharacteristicsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelGCharacteristicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAmount)
                    .addComponent(jLabelDuring)
                    .addComponent(jLabelCape)
                    .addComponent(jLabelRate)
                    .addComponent(formattedTextAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formattedTextDuree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formattedTextCape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formattedTextRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelGCharacteristicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(jButtonInitialize))
                .addContainerGap())
        );

        jTableDecay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Year", "Index", "NewRate", "Monthly", "Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneDecay.setViewportView(jTableDecay);

        jLabelTableDecay.setText("Decay :");

        javax.swing.GroupLayout jPanelDecayLayout = new javax.swing.GroupLayout(jPanelDecay);
        jPanelDecay.setLayout(jPanelDecayLayout);
        jPanelDecayLayout.setHorizontalGroup(
            jPanelDecayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDecayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneDecay)
                    .addGroup(jPanelDecayLayout.createSequentialGroup()
                        .addComponent(jLabelTableDecay)
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        jPanelDecayLayout.setVerticalGroup(
            jPanelDecayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTableDecay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneDecay, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTableGrowth.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Year", "Index", "NewRate", "Monthly", "Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneGrowth.setViewportView(jTableGrowth);

        jLabelTableGrowth.setText("Growth :");

        javax.swing.GroupLayout jPanelGrowthLayout = new javax.swing.GroupLayout(jPanelGrowth);
        jPanelGrowth.setLayout(jPanelGrowthLayout);
        jPanelGrowthLayout.setHorizontalGroup(
            jPanelGrowthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGrowthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGrowthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneGrowth, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                    .addComponent(jLabelTableGrowth))
                .addContainerGap())
        );
        jPanelGrowthLayout.setVerticalGroup(
            jPanelGrowthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGrowthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTableGrowth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneGrowth, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
        );

        jLabelTableStable.setText("Stable :");

        jTableStable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Year", "Index", "NewRate", "Monthly", "Remaining"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneStable.setViewportView(jTableStable);

        javax.swing.GroupLayout jPanelStableLayout = new javax.swing.GroupLayout(jPanelStable);
        jPanelStable.setLayout(jPanelStableLayout);
        jPanelStableLayout.setHorizontalGroup(
            jPanelStableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelStableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTableStable)
                    .addComponent(jScrollPaneStable))
                .addContainerGap())
        );
        jPanelStableLayout.setVerticalGroup(
            jPanelStableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTableStable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneStable, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuSettings.setText("Paramètres");
        jMenuSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSettingsActionPerformed(evt);
            }
        });

        jMenuItemSettings.setText("Gestion des taux");
        jMenuItemSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSettingsActionPerformed(evt);
            }
        });
        jMenuSettings.add(jMenuItemSettings);

        jMenuBar1.add(jMenuSettings);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelGrowth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(jPanelDecay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelStable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelGCharacteristics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTitle)
                .addGap(14, 14, 14)
                .addComponent(PanelGCharacteristics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelGrowth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelStable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDecay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        
        if ( emptyFields()) {
            rateVariable.resetLists();

            rateVariable.stableRate(Double.parseDouble(this.formattedTextRate.getText()), Double.parseDouble(this.formattedTextDuree.getText()), Double.parseDouble(this.formattedTextAmount.getText()), Double.parseDouble(this.formattedTextCape.getText()));
            rateVariable.growthRate(Double.parseDouble(this.formattedTextRate.getText()), Double.parseDouble(this.formattedTextDuree.getText()), Double.parseDouble(this.formattedTextAmount.getText()), Double.parseDouble(this.formattedTextCape.getText()));
            rateVariable.decayRate(Double.parseDouble(this.formattedTextRate.getText()), Double.parseDouble(this.formattedTextDuree.getText()), Double.parseDouble(this.formattedTextAmount.getText()), Double.parseDouble(this.formattedTextCape.getText()));

            fillTable("growth");
            fillTable("stable");
            fillTable("decay");
        }
 
    }//GEN-LAST:event_btnStartActionPerformed

    private void formattedTextAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formattedTextAmountKeyPressed

    }//GEN-LAST:event_formattedTextAmountKeyPressed

    private void formattedTextAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formattedTextAmountKeyTyped
        capeKeyTypeNumericCharacters(evt);
    }//GEN-LAST:event_formattedTextAmountKeyTyped

    private void formattedTextDureeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formattedTextDureeKeyTyped
        capeKeyTypeNumericCharacters(evt);
    }//GEN-LAST:event_formattedTextDureeKeyTyped

    private void formattedTextCapeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formattedTextCapeKeyTyped
        capeKeyTypeNumericCharacters(evt);
    }//GEN-LAST:event_formattedTextCapeKeyTyped

    private void formattedTextRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formattedTextRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formattedTextRateActionPerformed

    private void jMenuSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSettingsActionPerformed
       
    }//GEN-LAST:event_jMenuSettingsActionPerformed

    private void jMenuItemSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSettingsActionPerformed
        FormRateVariableSettings formRateVariableSettings = new FormRateVariableSettings(rateVariable);
        formRateVariableSettings.setVisible(true);
    }//GEN-LAST:event_jMenuItemSettingsActionPerformed

    private void jButtonInitializeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInitializeActionPerformed
        formattedTextAmount.setText("");
        formattedTextCape.setText("");
        formattedTextDuree.setText("");
        
        emptyTable(jTableDecay);
        emptyTable(jTableGrowth);
        emptyTable(jTableStable);
    }//GEN-LAST:event_jButtonInitializeActionPerformed

    /** 
     * Character input control, accepts only numeric characters
     * @param evt
     *            The element actuated.
     */
    public void capeKeyTypeNumericCharacters(java.awt.event.KeyEvent evt){
        char c = evt.getKeyChar();
        //the character is digital
        if (c >= '0' && c <= '9') {
            // System.out.println(evt);
        } else {
            //deleting the character
            evt.consume();
        }
    }
    
    /**
     * Test if a required field is empty.
     * If a field is empty then display a fake error messages and return false.
     * If all fields are filled then no display and return true. 
     * @return boolean
     *            Return false if a field is empty, otherwise return true.    
     */
    public boolean emptyFields(){
        if(formattedTextAmount.getText().isEmpty() || formattedTextCape.getText().isEmpty() || formattedTextDuree.getText().isEmpty() || formattedTextRate.getText().isEmpty()){
            jLabelError.setForeground(java.awt.Color.red);
            jLabelError.setText("Vous devez remplir tous les champs marqués d'une étoiles.");
            return false;
        }
        else {
            jLabelError.setForeground(java.awt.Color.black);
             jLabelError.setText("* champs obligatoires.");
             return true;
        }
    }
    
    /** 
     * Empty jTable passed as parameter
     * @param jTable
     *            The jTable to empty.
     */
    public void emptyTable(JTable jTable){
        DefaultTableModel model = new DefaultTableModel(title, 0){
            @Override
            public boolean isCellEditable(int rowIndex, int mColIndex){
                    return false;
            }
        };
        model.getDataVector().removeAllElements();
        jTable.setModel(model);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRateVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRateVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRateVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRateVariable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRateVariable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelGCharacteristics;
    private javax.swing.JButton btnStart;
    private javax.swing.JFormattedTextField formattedTextAmount;
    private javax.swing.JFormattedTextField formattedTextCape;
    private javax.swing.JFormattedTextField formattedTextDuree;
    private javax.swing.JFormattedTextField formattedTextRate;
    private javax.swing.JButton jButtonInitialize;
    private javax.swing.JLabel jLabelAmount;
    private javax.swing.JLabel jLabelCape;
    private javax.swing.JLabel jLabelDuring;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelRate;
    private javax.swing.JLabel jLabelTableDecay;
    private javax.swing.JLabel jLabelTableGrowth;
    private javax.swing.JLabel jLabelTableStable;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemSettings;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JPanel jPanelDecay;
    private javax.swing.JPanel jPanelGrowth;
    private javax.swing.JPanel jPanelStable;
    private javax.swing.JScrollPane jScrollPaneDecay;
    private javax.swing.JScrollPane jScrollPaneGrowth;
    private javax.swing.JScrollPane jScrollPaneStable;
    private javax.swing.JTable jTableDecay;
    private javax.swing.JTable jTableGrowth;
    private javax.swing.JTable jTableStable;
    // End of variables declaration//GEN-END:variables

    /**
     * Depending on the type of rate, can fill the chart table JTable.. 
     * @param typeRate
     *            String containing the type of rate.    
     */
    public void fillTable(String typeRate){
        
        DefaultTableModel model = new DefaultTableModel(title, 0){
            @Override
            public boolean isCellEditable(int rowIndex, int mColIndex){
                    return false;
            }
        };
        
        switch (typeRate) {
        case "decay":
            for (Double[] table : rateVariable.getListDouble("decay"))
                model.addRow(table);

            jTableDecay.setModel(model);
            break;
            
        case "growth":
            for (Double[] table : rateVariable.getListDouble("growth"))
                model.addRow(table);

            jTableGrowth.setModel(model);
            break;
            
        case "stable":
            for (Double[] table : rateVariable.getListDouble("stable"))
                model.addRow(table);

            jTableStable.setModel(model);
            break;
            
        default:
            System.out.println("Error, impossible to fill the tables");
        }
    }
}
