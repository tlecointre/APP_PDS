/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hubanato.forms;

import edu.hubanato.controlers.AmortizationCalc;
import java.awt.Graphics;
import java.awt.PrintJob;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.standard.DialogTypeSelection;
import javax.swing.JDialog;

/**
 *
 * @author Tony
 */
public class AmortizationScheduleForm extends javax.swing.JFrame implements Printable{

    private AmortizationCalc am;
    
    public AmortizationScheduleForm() {
        initComponents();
        am = new AmortizationCalc(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        amortizationTable = new javax.swing.JTable();
        printButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        amortizationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mois", "Capital amorti", "Intérêts", "Capital restant", "Mensualité", "Assurance", "Mensualité avec assurance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(amortizationTable);

        printButton.setText("Imprimer");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printButton)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printButton)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        PrintJob job = getToolkit().getPrintJob(this,"essai", null); 
        if (job != null) { 
        // Récupère le Graphics dans lequel on va écrire
            Graphics g = job.getGraphics(); 
            if (g != null) { 
                //Impression du JTable uniquement
                getTable().printAll(g); 
                g.dispose(); 
            }    
            job.end(); 
        }
        
        /*PrinterJob job = PrinterJob.getPrinterJob(); //Get the printer's job list
        job.setPrintable(this); //We print with this class (btnPrintAction, which implements Printable)
        if (job.printDialog() == true) { //If we clicked OK in the print dialog
            try {job.print();} catch (PrinterException ex){
		//It did not work (PrinterException thrown), so add any error handling routines.
            }
        }*/
        
        /*try {
            
            boolean complete = this.getTable().print();
            if (complete) {
                System.out.println("OK");
            } else {
                System.out.println("PAS OK");
            }
            } 
        catch (PrinterException pe) {
            }*/
    }//GEN-LAST:event_printButtonActionPerformed

    
    public javax.swing.JTable getTable(){
        return amortizationTable;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable amortizationTable;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton printButton;
    // End of variables declaration//GEN-END:variables

    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
