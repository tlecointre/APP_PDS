/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hubanato.forms;

import edu.hubanato.entities.RateVariable;
import javax.swing.JFrame;

/**
 *
 * @author Baptiste
 */
public class FormRateVariableSettings extends javax.swing.JFrame {

    RateVariable rateVariable;
    
    /**
     * Creates new form FormRateVariableSettings
     * @param rateVariable
     *            Passage of the current object RateVariable.
     */
    public FormRateVariableSettings(RateVariable rateVariable) {
        this.rateVariable = rateVariable;
        initComponents();
        
        setTitle("Paramètre des taux");
        
        // Close when clicking on the cross
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    private FormRateVariableSettings() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabelRateMin = new javax.swing.JLabel();
        jFormattedTextRateMin = new javax.swing.JFormattedTextField();
        jLabelRateMax = new javax.swing.JLabel();
        jFormattedTextRateMax = new javax.swing.JFormattedTextField();
        jButtonValidate = new javax.swing.JButton();
        jButtonInitialize = new javax.swing.JButton();
        jLabelError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Paramètres");
        jLabelTitle.setToolTipText("");

        jLabelRateMin.setText("Taux minimum autorisé (en %) :");

        jFormattedTextRateMin.setText(String.valueOf(rateVariable.getRateMin()));
        jFormattedTextRateMin.setToolTipText("");
        jFormattedTextRateMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextRateMinActionPerformed(evt);
            }
        });
        jFormattedTextRateMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextRateMinKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextRateMinKeyTyped(evt);
            }
        });

        jLabelRateMax.setText("Taux maximum autorisé (en %) :");

        jFormattedTextRateMax.setText(String.valueOf(rateVariable.getRateMax()));
        jFormattedTextRateMax.setToolTipText("");
        jFormattedTextRateMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextRateMaxActionPerformed(evt);
            }
        });
        jFormattedTextRateMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextRateMaxKeyTyped(evt);
            }
        });

        jButtonValidate.setText("Valider");
        jButtonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateActionPerformed(evt);
            }
        });

        jButtonInitialize.setText("Initialiser");
        jButtonInitialize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInitializeActionPerformed(evt);
            }
        });

        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jLabelError.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButtonValidate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                .addComponent(jButtonInitialize))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabelRateMax, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelRateMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedTextRateMin, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextRateMax, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                        .addGap(0, 66, Short.MAX_VALUE))
                    .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRateMin)
                    .addComponent(jFormattedTextRateMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRateMax)
                    .addComponent(jFormattedTextRateMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonValidate)
                    .addComponent(jButtonInitialize))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFormattedTextRateMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextRateMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextRateMaxActionPerformed

    private void jButtonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateActionPerformed

        if ( emptyFields()) {
            setRateMin();
            setRateMax();
        }
        
    }//GEN-LAST:event_jButtonValidateActionPerformed

    private void jFormattedTextRateMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextRateMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextRateMinActionPerformed

    private void jFormattedTextRateMinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextRateMinKeyPressed

    }//GEN-LAST:event_jFormattedTextRateMinKeyPressed

    private void jFormattedTextRateMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextRateMinKeyTyped
        capeKeyTypeNumericCharacters(evt);
    }//GEN-LAST:event_jFormattedTextRateMinKeyTyped

    private void jFormattedTextRateMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextRateMaxKeyTyped
        capeKeyTypeNumericCharacters(evt);
    }//GEN-LAST:event_jFormattedTextRateMaxKeyTyped

    private void jButtonInitializeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInitializeActionPerformed
        jFormattedTextRateMin.setText("");
        jFormattedTextRateMax.setText("");
    }//GEN-LAST:event_jButtonInitializeActionPerformed

    /** 
     * Character input control, accepts only numeric characters
     * @param evt
     *            The element actuated.
     */
    public void capeKeyTypeNumericCharacters(java.awt.event.KeyEvent evt){
        char c = evt.getKeyChar();
        //the character is digital
        if (c >= '0' && c <= '9') {
            // System.out.println(evt);
        } else {
            //deleting the character
            evt.consume();
        }
    }
    
    /**
     * Test if a required field is empty.
     * If a field is empty then display a fake error messages and return false.
     * If all fields are filled then no display and return true. 
     * @return boolean
     *            Return false if a field is empty, otherwise return true.    
     */
    public boolean emptyFields(){
        if( jFormattedTextRateMax.getText().isEmpty() && jFormattedTextRateMin.getText().isEmpty()){
            jLabelError.setText("Vous devez remplir au moins un champs");
            return false;
        }
        else {
             jLabelError.setText("");
             return true;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRateVariableSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRateVariableSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRateVariableSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRateVariableSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRateVariableSettings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonInitialize;
    private javax.swing.JButton jButtonValidate;
    private javax.swing.JFormattedTextField jFormattedTextRateMax;
    private javax.swing.JFormattedTextField jFormattedTextRateMin;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelRateMax;
    private javax.swing.JLabel jLabelRateMin;
    private javax.swing.JLabel jLabelTitle;
    // End of variables declaration//GEN-END:variables

    /**
     * Save the new minimum rate
     */
    public void setRateMin(){
        if(!jFormattedTextRateMin.getText().isEmpty()){
            rateVariable.setRateMin(Double.parseDouble(this.jFormattedTextRateMin.getText()));
        }
    }
    
    /**
     * Save the new maximum rate
     */
    public void setRateMax(){
        if(!jFormattedTextRateMax.getText().isEmpty()){
            rateVariable.setRateMax(Double.parseDouble(this.jFormattedTextRateMax.getText()));
        }
    }

}
